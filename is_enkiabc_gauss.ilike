/***data***/
Data data()
{
  arma::colvec X(1);
  X(0) = 0.0;
  
  Data data;
  data["X"] = X;
  return data;
}

/***evaluate_log_prior***/
double evaluate_log_prior(const Parameters &parameters)
{
  return 0.0;
}

/***simulate_prior***/
Parameters simulate_prior(RandomNumberGenerator &rng)
{
  arma::colvec theta(1);
  theta[0] = 0.0;
  return Parameters("θ",theta);
}

/***simulate_data_model***/
Data simulate_data_model(RandomNumberGenerator &rng,
                    const Parameters &parameters)
{
  double theta = parameters["θ"][0];
  
  Data output;
  output["X"] = rnorm(rng,theta,1.0);
  return output;
}

// Arguments are:
// number of simulations from model (given as an argument in R)
// name of tolerance variable
// tolerance schedule (given as an argument in R)
// shifter for EnK (given as an argument in R)
// number of iterations of EnKI stored (set to be large to ensure all iterations are stored)
// ESS used in adaptive tolerance schedule (given as an argument in R)
// EnKI is performed on summary rather than state (argument set to true)
// significance level used to skip sequence (given as an argument in R)
// parallel set to false
/***sbi_likelihood,ilike::enki_abc(p1,ε,p2,p3,1000000,p4,100,true,p5,false)***/

/***data_variable***/
std::string simulated_variable()
{
  return "X";
}
